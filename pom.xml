<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!--
  /**
   * Licensed to the Apache Software Foundation (ASF) under one
   * or more contributor license agreements.  See the NOTICE file
   * distributed with this work for additional information
   * regarding copyright ownership.  The ASF licenses this file
   * to you under the Apache License, Version 2.0 (the
   * "License"); you may not use this file except in compliance
   * with the License.  You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  -->
  <modelVersion>4.0.0</modelVersion>
  <modules>
    <module>lindorm-client</module>
    <module>lindorm-sql-core</module>
    <module>lindorm-sql-client</module>
    <module>lindorm-server</module>
    <module>lindorm-benchmark</module>
  </modules>
  <!--To build a release I do this:

    $ mvn clean site install assembly:single -Prelease
   -->

  <parent>
    <groupId>org.apache</groupId>
    <artifactId>apache</artifactId>
    <version>8</version>
    <relativePath></relativePath><!-- no parent resolution -->
  </parent>

  <groupId>com.alibaba.lindorm</groupId>
  <artifactId>lindorm</artifactId>
  <packaging>pom</packaging>
  <version>1.4-SNAPSHOT</version>
  <name>Lindorm</name>
  <description>
    TODO
  </description>

  <distributionManagement>
    <repository>
      <id>releases</id>
      <url>http://mvnrepo.alibaba-inc.com/mvn/releases</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <url>http://mvnrepo.alibaba-inc.com/mvn/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>cdh.repo</id>
      <url>https://repository.cloudera.com/content/groups/cloudera-repos</url>
      <name>Cloudera Repository</name>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>apache release</id>
      <url>https://repository.apache.org/content/repositories/releases/</url>
    </repository>
    <repository>
      <id>apache non-releases</id>
      <name>Apache non-releases</name>
      <url>http://people.apache.org/~stack/m2/repository</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>java.net</id>
      <name>Java.Net</name>
      <url>http://download.java.net/maven/2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>codehaus</id>
      <name>Codehaus Public</name>
      <url>http://repository.codehaus.org/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>repository.jboss.org</id>
      <url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <!-- common -->
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm</maven.build.timestamp.format>
    <buildDate>${maven.build.timestamp}</buildDate>
    <!-- FYI this is just the client compile source -->
    <compileSource>1.6</compileSource>

    <!-- Dependencies -->
    <findbugs.maven.version>3.0.5</findbugs.maven.version>
    <avro.version>1.5.3</avro.version>
    <commons-cli.version>1.2</commons-cli.version>
    <commons-codec.version>1.4</commons-codec.version>
    <commons-httpclient.version>3.1</commons-httpclient.version><!-- pretty outdated -->
    <commons-io.version>2.4</commons-io.version>
    <commons-lang.version>2.6</commons-lang.version>
    <commons-math.version>2.1</commons-math.version>
    <commons-configuration.version>1.6</commons-configuration.version>
    <metrics-core.version>2.1.2</metrics-core.version>
    <hadoop.lzo.version>0.4.11</hadoop.lzo.version>
    <jackson.version>1.8.8</jackson.version>
    <jasper.version>5.5.23</jasper.version>
    <jaxb-api.version>2.1</jaxb-api.version>
    <jetty.version>6.1.26.cloudera.2</jetty.version>
    <jetty-jsp.version>9.2.19.v20160908</jetty-jsp.version>
    <!--jetty-jsp.version>9.3.19.v20170502</jetty-jsp.version-->
    <netty.version>4.0.33.Final</netty.version>
    <jetty.jspapi.version>6.1.14</jetty.jspapi.version>
    <jersey.version>1.4</jersey.version>
    <jruby.version>1.6.5</jruby.version>
    <powermock-api.version>1.5.5</powermock-api.version>
    <powermock-module.version>1.5.5</powermock-module.version>
    <protobuf.version>2.4.0a</protobuf.version>
    <stax-api.version>1.0.1</stax-api.version>
    <thrift.version>0.9.1</thrift.version>
    <zookeeper.version>3.4.3</zookeeper.version>
    <hadoop-snappy.version>0.0.1-SNAPSHOT</hadoop-snappy.version>
    <package.prefix>/usr</package.prefix>
    <package.conf.dir>/etc/lindorm</package.conf.dir>
    <package.log.dir>/var/log/lindorm</package.log.dir>
    <package.pid.dir>/var/run/lindorm</package.pid.dir>
    <package.release>1</package.release>
    <!-- also must update this when we bump version -->
    <package.version>0.91.0</package.version>
    <final.name>${project.artifactId}-${project.version}</final.name>
    <guava.version>11.0.2</guava.version>
    <lindorm_thirdparty_netty.version>4.1.10-lindorm</lindorm_thirdparty_netty.version>
    <lindorm_thirdparty_misc.version>1.0.2</lindorm_thirdparty_misc.version>
    <eagleeye-core.version>1.5.2.1</eagleeye-core.version>
    <commons-logging.version>1.1.1</commons-logging.version>
    <log4j.version>1.2.16</log4j.version>
    <fastjson.version>1.1.46.sec01</fastjson.version>
    <ajdk-api.version>8.3.6.fp5</ajdk-api.version>
    <disruptor.version>3.3.7</disruptor.version>
    <dnsjava.version>2.1.7</dnsjava.version>
    <slf4j.version>1.6.1</slf4j.version>
    <calcite.version>1.14.0</calcite.version>
    <findbugs-annotations>1.3.9-1</findbugs-annotations>


    <!-- Tests -->
    <junit.version>4.11</junit.version>
    <mockito-all.version>1.9.5</mockito-all.version>
    <hamcrest-core.version>1.3</hamcrest-core.version>
    <surefire.version>2.21.0</surefire.version>
    <surefire.provider>surefire-junit47</surefire.provider>
    <!-- Test inclusion patterns used by failsafe configuration -->
    <unittest.include>**/Test*.java</unittest.include>
    <integrationtest.include>**/IntegrationTest*.java</integrationtest.include>
    <!-- default: run small & medium, medium with 2 threads -->
    <surefire.skipFirstPart>false</surefire.skipFirstPart>
    <surefire.skipSecondPart>false</surefire.skipSecondPart>

    <surefire.firstPartParallel>classes</surefire.firstPartParallel>
    <surefire.firstPartThreadCount>1</surefire.firstPartThreadCount>
    <surefire.secondPartThreadCount>4</surefire.secondPartThreadCount>

    <surefire.firstPartGroups>com.alibaba.lindorm.server.SmallTests</surefire.firstPartGroups>
    <surefire.secondPartGroups>com.alibaba.lindorm.server.MediumTests,com.alibaba.lindorm.server.LargeTests
    </surefire.secondPartGroups>
    <test.output.tofile>true</test.output.tofile>
  </properties>

  <build>
    <!-- Some plugins (javadoc for example) can be used in the normal build- and the site phase.
         These plugins inherit their options from the <reporting> section below. These settings
         can be overwritten here. -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <!--Making a release I've been using mvn 3.0 and specifying the apache-release
              profile on the command line as follows:

              $ ~/bin/mvn/bin/mvn  -Papache-release release:perform

              I've also been kiling the release:prepare step mid-way to check the
              release.properties it generates at the top-level.  Sometimes it refers
              to HEAD rather than to the svn branch.
           -->
          <configuration>
            <!--You need this profile. It'll sign your artifacts.
                I'm not sure if this config. actually works though.
                I've been specifying -Papache-release on the command-line
             -->
            <releaseProfiles>apache-release</releaseProfiles>
            <!--This stops our running tests for each stage of maven release.
                But it builds the test jar.  From SUREFIRE-172.
              -->
            <arguments>-Dmaven.test.skip.exec</arguments>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.1</version>
          <configuration>
            <source>${compileSource}</source>
            <target>${compileSource}</target>
            <showWarnings>true</showWarnings>
            <showDeprecation>false</showDeprecation>
            <compilerArgument>-XDignore.symbol.file</compilerArgument>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
          <dependencies>
            <!-- by default surefire selects dynamically the connector to the unit tests tool.
              We want to use always the same as the different connectors
               can have different bugs and behaviour.
            -->
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>${surefire.provider}</artifactId>
              <version>${surefire.version}</version>
            </dependency>
          </dependencies>

          <configuration>
            <forkedProcessTimeoutInSeconds>10800</forkedProcessTimeoutInSeconds>
            <argLine>-enableassertions -Xmx1400m -XX:MaxMetaspaceSize=1024m -Djava.security.egd=file:/dev/./urandom</argLine>
            <redirectTestOutputToFile>${test.output.tofile}</redirectTestOutputToFile>
            <failIfNoTests>false</failIfNoTests>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${surefire.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>${surefire.provider}</artifactId>
              <version>${surefire.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <includes>
              <include>${integrationtest.include}</include>
            </includes>
            <excludes>
              <exlude>${unittest.include}</exlude>
              <exclude>**/*$*</exclude>
              <exclude>${test.exclude.pattern}</exclude>
            </excludes>
            <redirectTestOutputToFile>${test.output.tofile}</redirectTestOutputToFile>
            <environmentVariables>
              <LD_LIBRARY_PATH>${env.LD_LIBRARY_PATH}:${project.build.directory}/nativelib</LD_LIBRARY_PATH>
              <DYLD_LIBRARY_PATH>${env.DYLD_LIBRARY_PATH}:${project.build.directory}/nativelib</DYLD_LIBRARY_PATH>
              <MALLOC_ARENA_MAX>4</MALLOC_ARENA_MAX>
            </environmentVariables>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <configuration>
            <filesets>
              <fileset>
                <!--dfs tests have build dir hardcoded. Clean it as part of
               clean target-->
                <directory>build</directory>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${surefire.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro-maven-plugin</artifactId>
          <version>${avro.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It
          has no influence on the Maven build itself. m2e does not provide any safeguards against
          rogue maven plugins that leak classloaders, modify random files inside workspace
          or throw nasty exceptions to fail the build -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro-maven-plugin</artifactId>
                    <versionRange>[1.5.3,)</versionRange>
                    <goals>
                      <goal>protocol</goal>
                      <goal>schema</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute></execute>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.3,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute></execute>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jamon</groupId>
                    <artifactId>jamon-maven-plugin</artifactId>
                    <versionRange>[2.3.4,)</versionRange>
                    <goals>
                      <goal>translate</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute></execute>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin> <!-- in plugin management section so excludes can be inherited -->
          <groupId>org.apache.rat</groupId>
          <artifactId>apache-rat-plugin</artifactId>
          <version>0.8</version>
          <configuration>
            <excludes>
              <exclude>**/.*</exclude>
              <exclude>**/*.tgz</exclude>
              <exclude>**/*.orig</exclude>
              <exclude>**/test/**</exclude>
              <exclude>**/8e8ab58dcf39412da19833fcd8f687ac</exclude>
              <exclude>**/.git/**</exclude>
              <exclude>**/target/**</exclude>
              <exclude>**/CHANGES.txt</exclude>
              <exclude>**/generated/**</exclude>
              <exclude>**/conf/*</exclude>
              <exclude>**/*.avpr</exclude>
              <exclude>**/*.svg</exclude> <!-- vector graphics -->
              <exclude>**/*.vm</exclude> <!-- apache doxia generated -->
              <exclude>**/control</exclude>
              <exclude>**/conffile</exclude>
              <exclude>docs/*</exclude> <!-- auto-gen docs -->
              <!--It don't like freebsd license-->
              <exclude>**/src/site/resources/css/freebsd_docbook.css</exclude>
            </excludes>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.alibaba.lindorm</groupId>
        <artifactId>lindorm-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.lindorm</groupId>
        <artifactId>lindorm-sql-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.lindorm</groupId>
        <artifactId>lindorm-thirdparty-netty</artifactId>
        <version>${lindorm_thirdparty_netty.version}</version>
      </dependency>
      <dependency>
        <groupId>com.taobao.eagleeye</groupId>
        <artifactId>eagleeye-core</artifactId>
        <version>${eagleeye-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.lindorm.thirdparty</groupId>
        <artifactId>lindorm-shaded-miscellaneous</artifactId>
        <version>${lindorm_thirdparty_misc.version}</version>
      </dependency>

      <!-- General dependencies -->
      <dependency>
        <groupId>com.alibaba.ajdk</groupId>
        <artifactId>ajdk-api</artifactId>
        <version>${ajdk-api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>${disruptor.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>${fastjson.version}</version>
      </dependency>
      <dependency>
        <groupId>dnsjava</groupId>
        <artifactId>dnsjava</artifactId>
        <version>${dnsjava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.yammer.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${metrics-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hadoop</groupId>
        <artifactId>hadoop-lzo</artifactId>
        <version>${hadoop.lzo.version}</version>
      </dependency>
      <dependency>
        <groupId>org.lz4</groupId>
        <artifactId>lz4-java</artifactId>
        <version>1.5.0</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>${commons-configuration.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.stephenc.high-scale-lib</groupId>
        <artifactId>high-scale-lib</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>${commons-httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${commons-lang.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.thoughtworks.paranamer</groupId>
            <artifactId>paranamer</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.thoughtworks.paranamer</groupId>
            <artifactId>paranamer-ant</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-ipc</artifactId>
        <version>${avro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
        <exclusions>
          <exclusion>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.thrift</groupId>
        <artifactId>libthrift</artifactId>
        <version>${thrift.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.jruby</groupId>
        <artifactId>jruby-complete</artifactId>
        <version>${jruby.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty</artifactId>
        <version>${jetty.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>${netty.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>apache-jsp</artifactId>
        <version>${jetty-jsp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-http</artifactId>
        <version>${jetty-jsp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-plus</artifactId>
        <version>${jetty-jsp.version}</version>
      </dependency>
      <!--dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jsp-2.1</artifactId>
        <version>${jetty.jspapi.version}</version>
        <exclusions>
          <exclusion>
            <groupId>ant</groupId>
            <artifactId>ant</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jsp-api-2.1</artifactId>
        <version>${jetty.jspapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>servlet-api-2.5</artifactId>
        <version>${jetty.jspapi.version}</version>
      </dependency-->
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-core-asl</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-jaxrs</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-xc</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>tomcat</groupId>
        <artifactId>jasper-compiler</artifactId>
        <version>${jasper.version}</version>
        <scope>runtime</scope>
        <exclusions>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ant</groupId>
            <artifactId>ant</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>tomcat</groupId>
        <artifactId>jasper-runtime</artifactId>
        <version>${jasper.version}</version>
        <scope>runtime</scope>
        <exclusions>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jamon</groupId>
        <artifactId>jamon-runtime</artifactId>
        <version>2.3.1</version>
      </dependency>

      <!-- REST dependencies -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-core</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-json</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-server</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb-api.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.xml.stream</groupId>
            <artifactId>stax-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>stax</groupId>
        <artifactId>stax-api</artifactId>
        <version>${stax-api.version}</version>
      </dependency>
      <dependency>
        <groupId>jdk.tools</groupId>
        <artifactId>jdk.tools</artifactId>
        <version>1.7</version>
        <scope>system</scope>
        <systemPath>${java.home}/../lib/tools.jar</systemPath>
      </dependency>
      <!-- unitized -->
      <dependency>
        <groupId>com.taobao.diamond</groupId>
        <artifactId>diamond-client</artifactId>
        <version>3.7.4</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging.version}</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.stephenc.findbugs</groupId>
        <artifactId>findbugs-annotations</artifactId>
        <version>${findbugs-annotations}</version>
      </dependency>


      <!-- Test dependencies -->
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
	<version>${hamcrest-core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito-all.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>${powermock-api.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock-module.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math</artifactId>
        <version>${commons-math.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- See http://jira.codehaus.org/browse/MSITE-443 why the settings need to be here and not in pluginManagement. -->
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.1.2</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>project-team</report>
              <report>mailing-list</report>
              <report>cim</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>scm</report>
              <report>index</report>
            </reports>
          </reportSet>
        </reportSets>

      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>2.0.1</version>
        <configuration>
          <inputEncoding>UTF-8</inputEncoding>
          <outputEncoding>UTF-8</outputEncoding>
          <templateFile>src/site/site.vm</templateFile>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.6.1</version>
        <configuration>
          <docfilessubdirs>true</docfilessubdirs>
        </configuration>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
        <!--
          This is probably not needed, given the smallness of the Lindorm source code, but left here in case
          <minmemory>128m</minmemory>
          <maxmemory>1024m</maxmemory>
        -->
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>0.8</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.7.2</version>
        <reportSets>
          <reportSet>
            <id>integration-tests</id>
            <reports>
              <report>report-only</report>
            </reports>
            <configuration>
              <outputName>failsafe-report</outputName>
              <reportsDirectories>
                <reportsDirectory>${project.build.directory}/failsafe-reports</reportsDirectory>
              </reportsDirectories>
            </configuration>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>
